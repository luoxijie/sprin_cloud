<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qianfeng.customerprovider.dao.CustomerDao">

    <resultMap type="Customer" id="CustomerMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="customerName" column="customer_name" jdbcType="VARCHAR"/>
        <result property="customerAddress" column="customer_address" jdbcType="VARCHAR"/>
        <result property="customerTicket" column="customer_ticket" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="getCustomerList" resultMap="CustomerMap">
        SELECT * FROM school.customer
    </select>

    <!--查询单个-->
    <select id="queryById" resultMap="CustomerMap">
        select
        id, customer_name, customer_address, customer_ticket
        from school.customer
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="CustomerMap">
        select
        id, customer_name, customer_address, customer_ticket
        from school.customer
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="CustomerMap">
        select
        id, customer_name, customer_address, customer_ticket
        from school.customer
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="customerName != null and customerName != ''">
                and customer_name = #{customerName}
            </if>
            <if test="customerAddress != null and customerAddress != ''">
                and customer_address = #{customerAddress}
            </if>
            <if test="customerTicket != null and customerTicket != ''">
                and customer_ticket = #{customerTicket}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into school.customer(customer_name, customer_address, customer_ticket)
        values (#{customerName}, #{customerAddress}, #{customerTicket})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into school.customer(customer_name, customer_address, customer_ticket)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.customerName}, #{entity.customerAddress}, #{entity.customerTicket})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into school.customer(customer_name, customer_address, customer_ticket)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.customerName}, #{entity.customerAddress}, #{entity.customerTicket})
        </foreach>
        on duplicate key update
        customer_name = values(customer_name) , customer_address = values(customer_address) , customer_ticket =
        values(customer_ticket)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update school.customer
        <set>
            <if test="customerName != null and customerName != ''">
                customer_name = #{customerName},
            </if>
            <if test="customerAddress != null and customerAddress != ''">
                customer_address = #{customerAddress},
            </if>
            <if test="customerTicket != null and customerTicket != ''">
                customer_ticket = #{customerTicket},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from school.customer where id = #{id}
    </delete>

</mapper>

