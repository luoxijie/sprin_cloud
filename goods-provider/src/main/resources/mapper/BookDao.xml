<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qianfeng.goodsprovider.dao.BookDao">

    <resultMap type="Book" id="BookMap">
        <result property="bookId" column="book_id" jdbcType="INTEGER"/>
        <result property="bookName" column="book_name" jdbcType="VARCHAR"/>
        <result property="bookAuthor" column="book_author" jdbcType="VARCHAR"/>
        <result property="bookDesc" column="book_desc" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BookMap">
        select
        book_id, book_name, book_author, book_desc
        from school.book
        where book_id = #{bookId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BookMap">
        select
        book_id, book_name, book_author, book_desc
        from school.book
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BookMap">
        select
        book_id, book_name, book_author, book_desc
        from school.book
        <where>
            <if test="bookId != null">
                and book_id = #{bookId}
            </if>
            <if test="bookName != null and bookName != ''">
                and book_name = #{bookName}
            </if>
            <if test="bookAuthor != null and bookAuthor != ''">
                and book_author = #{bookAuthor}
            </if>
            <if test="bookDesc != null and bookDesc != ''">
                and book_desc = #{bookDesc}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="bookId" useGeneratedKeys="true">
        insert into school.book(book_name, book_author, book_desc)
        values (#{bookName}, #{bookAuthor}, #{bookDesc})
    </insert>

    <insert id="insertBatch" keyProperty="bookId" useGeneratedKeys="true">
        insert into school.book(book_name, book_author, book_desc)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.bookName}, #{entity.bookAuthor}, #{entity.bookDesc})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="bookId" useGeneratedKeys="true">
        insert into school.book(book_name, book_author, book_desc)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.bookName}, #{entity.bookAuthor}, #{entity.bookDesc})
        </foreach>
        on duplicate key update
        book_name = values(book_name) , book_author = values(book_author) , book_desc = values(book_desc)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update school.book
        <set>
            <if test="bookName != null and bookName != ''">
                book_name = #{bookName},
            </if>
            <if test="bookAuthor != null and bookAuthor != ''">
                book_author = #{bookAuthor},
            </if>
            <if test="bookDesc != null and bookDesc != ''">
                book_desc = #{bookDesc},
            </if>
        </set>
        where book_id = #{bookId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from school.book where book_id = #{bookId}
    </delete>

    <select id="getBooksList" resultMap="BookMap">
        SELECT * from school.book
    </select>

</mapper>

